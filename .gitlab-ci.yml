include:
  - project: 'common/gitlab-ci'
    ref: v0.4.19
    file: '/templates/npm-package-with-container.yml'

npm-package-build:
  image: registry.kyso.io/kyso-io/kyso-cli:builder-v1.0.5
  before_script:
    - mv /root/node_modules .

npm-package-publish:
  image: registry.kyso.io/kyso-io/kyso-cli:builder-v1.0.5
  before_script:
    - mv /root/node_modules .
    - !reference [.git-config, before_script]
    - !reference [.npm-config, before_script]
  script:
    - !reference [.npm-package-publish, script]
    # Build binaries
    - npm run pack
    # Create and push installer tgz package
    - |
      PKG_NAME="kyso-cli-installer"
      PKG_VERS="$CI_COMMIT_TAG"
      PKGS_DIR="$PKG_NAME-$PKG_VERS"
      PKGS_TGZ="$PKG_NAME-$PKG_VERS.tgz"
      UPL_BASE_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"
      TGZ_UPLOAD_URL="$UPL_BASE_URL/$PKG_NAME/$PKG_VERS/$PKGS_TGZ"
    - TGZ_URLS="$(npm view "@kyso-io/kyso-cli@$CI_COMMIT_TAG" dist.tarball)"
    - |
      for pkg_ref in $(
        sed -n -e 's%^.*"\(@kyso-io/.*\)": "^*\(.*\)".*$%\1@\2%p' package.json
      ); do
        TGZ_URLS="$TGZ_URLS $(npm view "$pkg_ref" dist.tarball)"
      done
    - mkdir "$PKGS_DIR" && cd "$PKGS_DIR"
    - |
      HEADER="Authorization: Bearer ${CI_JOB_TOKEN}"
      echo "Downloading tar files:"
      for tgz_url in $TGZ_URLS; do
        echo "- $tgz_url";
        curl -s -H "$HEADER" "$tgz_url" -O;
      done
      echo "Creating install.sh script"
      echo '#!/bin/sh' > install.sh
      echo 'npm install -g *.tgz' >> install.sh
      chmod +x install.sh
      cd ..
    - tar czvf $PKGS_TGZ $PKGS_DIR
    - |
      curl -s --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "$PKGS_TGZ" \
        "$TGZ_UPLOAD_URL"
    - |
      # Push package to npm; FIXME: disabled for now
      if [ "$NPMJS_TOKEN" ] && false; then
        cd "$PKGS_DIR"
        echo "@kyso-io:registry=https://registry.npmjs.org" >".npmrc"
        echo "//registry.npmjs.org/:_authToken=${NPMJS_TOKEN}" >>".npmrc"
        failed=""
        for _tgz in $(ls -tr *.tgz); do
          npm publish --userconfig ".npmrc" --access public "$_tgz" ||
            failed="$failed $_tgz"
        done
        cd ..
        for _tgz in $failed; do
          echo "Publication of the '$_tgz' package failed!"
          echo "Check if it was already published or something else is wrong"
        done
      fi
    - rm -rf "$PKGS_DIR"
    - mv "$PKGS_TGZ" "kyso-cli-installer.tgz"
  artifacts:
    paths:
      - .build-args
      - kyso-cli-installer.tgz
      - dist/win32/*.exe
      - dist/*.zip
      - dist/*.tar.gz
    expire_in: 1 day

docker-build:
  before_script:
    - !reference [.docker-config, before_script]
  after_script:
    - rm -f kyso-cli-installer.tgz
  dependencies:
    - npm-package-build
    - npm-package-publish

release_tag:
  dependencies:
    - npm-package-publish
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - echo "running release_tag"
    - |
      PKG_NAME="kyso-cli-installer"
      PKG_VERS="$CI_COMMIT_TAG"
      PKGS_TGZ="$PKG_NAME-$PKG_VERS.tgz"
      UPL_BASE_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"
      TGZ_UPLOAD_URL="$UPL_BASE_URL/$PKG_NAME/$PKG_VERS/$PKGS_TGZ"
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" \
        --description "kyso-cli release $CI_COMMIT_TAG" \
        --tag-name "$CI_COMMIT_TAG" \
        --assets-link "{\"name\":\"${PKGS_TGZ}\",\"url\":\"${TGZ_UPLOAD_URL}\"}"
  release:

variables:
  DOCKER_BUILDKIT: 1
